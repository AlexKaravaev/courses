#define FRONT_US    S1
#define BOTTOM_US   S3
#define MOTOR_PORT  OUT_BC
#define RIGHT_MOTOR OUT_C
#define LEFT_MOTOR  OUT_B
#define FWD_VOLTAGE -70
#define NEED_DIST   40.0
#define H   21.3
#define KP  0.5
#define KI  0.05
#define KD  1.0

task main(){

    int i, u_left, u_right, u_rot, str_size;
    float d1, d2, d1_last, d2_last;
    float distance;
    byte handle;
    string s;
    long int time;
    float e, ei = 0.0, ed, last_e;
    float dt;
    long int last_time;

    DeleteFile("data.txt");
    CreateFile("data.txt", 20000, handle);
    Wait(7000);

    SetSensorLowspeed(FRONT_US);
    SetSensorLowspeed(BOTTOM_US);
    Wait(1000);    

    d1 = SensorUS(FRONT_US);
    d2 = SensorUS(BOTTOM_US);
    
    last_time = CurrentTick();    

    distance = (d1 + d2) * H * sqrt(1.0 / (H*H + (d2 - d1) * (d2 - d1))) / 2.0;
    last_e = (NEED_DIST - distance);

    while(true){
        
        d1 = SensorUS(FRONT_US);
        d2 = SensorUS(BOTTOM_US);

        dt = (CurrentTick() - last_time) / 1000.0;
        last_time = CurrentTick();

        distance = (d1 + d2) * H * sqrt(1.0 / (H*H + (d2 - d1) * (d2 - d1))) / 2.0;

        e = (NEED_DIST - distance);
        ed = (e - last_e) / dt;
        last_e = e;
        ei += e * dt;
        if(abs(ei) > 30) ei = sign(ei)*30;
        
        u_rot = KP * e + KI * ei + KD * ed; 
        if(abs(u_rot) > (100 - abs(FWD_VOLTAGE)))
            u_rot = sign(u_rot) * (100 - abs(FWD_VOLTAGE)); 
        u_left = FWD_VOLTAGE + u_rot;
        u_right = FWD_VOLTAGE - u_rot;

        OnFwd(RIGHT_MOTOR, u_right);
        OnFwd(LEFT_MOTOR, u_left);
     
/*        ClearScreen();
        NumOut(0, LCD_LINE1, d1);
        NumOut(0, LCD_LINE2, d2);
        NumOut(0, LCD_LINE3, distance);*/
 
        s = NumToStr(CurrentTick() - FirstTick()) + " " + NumToStr(distance) + " " +NumToStr(ei);
        WriteLnString(handle, s, str_size);
   }

}
