#define ANGLE_PORT  S1
#define WAIT_TIME   85
#define FRONT_MOTOR OUT_C
#define BOTT_MOTOR  OUT_B
#define KPANGLE     1.489   
#define KWSPEED     0.017
#define KPSPEED     0.321

 1.4894209  - 0.0165342  - 0.321883 
task main(){

    byte handle;
    string s;
    int str_size;

    long int alg_angle, last_time;
    int abs_angle, rpm, u;
    float last_p_angle, p_speed, p_angle;
    float w_angle, last_w_angle, w_speed;
    float max_volt, d_time;

    DeleteFile("inv_pend_data.txt");
    CreateFile("inv_pend_data.txt", 10000, handle);

    SetSensorLowspeed(ANGLE_PORT);
    //ResetSensorHTAngle(ANGLE_PORT, HTANGLE_MODE_CALIBRATE);
    ResetSensorHTAngle(ANGLE_PORT, HTANGLE_MODE_RESET);
    Wait(1000);

    max_volt = BatteryLevel() / 1000.0;
    last_time = CurrentTick();
    w_angle = (MotorRotationCount(FRONT_MOTOR) - MotorRotationCount(BOTT_MOTOR)) / 2;  
    ReadSensorHTAngle(ANGLE_PORT, abs_angle, alg_angle, rpm);
    p_angle = alg_angle;
    Wait(WAIT_TIME); 
    while(true){

        d_time = (CurrentTick() - last_time) / 1000.0;
        last_time = CurrentTick();

        last_p_angle = p_angle;
        ReadSensorHTAngle(ANGLE_PORT, abs_angle, alg_angle, rpm);
        p_angle = alg_angle;
        p_speed = (p_angle - last_p_angle) / d_time;

        last_w_angle = w_angle;
        w_angle = (MotorRotationCount(FRONT_MOTOR) - MotorRotationCount(BOTT_MOTOR)) / 2;
        w_speed = (w_angle - last_w_angle) / d_time;

        u = KPANGLE * p_angle + KWSPEED * w_speed + KPSPEED * p_speed;
        u = u * 100.0 / max_volt;
        if(abs(u) > 100) u = sign(u) * 100;

        ClearScreen();
        //NumOut(0, LCD_LINE1, p_angle);
        //NumOut(0, LCD_LINE2, w_angle);
        NumOut(0, LCD_LINE3, u);
        OnFwd(FRONT_MOTOR, u);
        OnFwd(BOTT_MOTOR, -u);

        s = NumToStr(CurrentTick() - FirstTick()) + " " + NumToStr(p_speed) + " " + NumToStr(p_angle) + " " + NumToStr(w_speed) + " " + NumToStr(w_angle) + " " + NumToStr(u); 
        WriteLnString(handle, s, str_size);        

        Wait(WAIT_TIME);
    }
}
